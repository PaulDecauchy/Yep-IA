from fastapi import APIRouter
from ingredients_generator import generate_ingredients_text
from models.schemas import Prompt, RecipeChainPrompt, TitleSelected
from fastapi import APIRouter
from models.schemas import Prompt, RecipeChainPrompt
from services.mistral_service import ask_mistral
from title_generator import generate_titles_text
from services.mistral_service import client, model_name

router = APIRouter(prefix="/recipes", tags=["recipes"])
@router.post("/titles")
def generate_titles(prompt: RecipeChainPrompt):
    preferences = prompt.tags.preferences if prompt.tags else []
    styles = prompt.tags.style if prompt.tags else []

    ingredients = [ingredient.name for ingredient in prompt.ingredients]
    utensils = prompt.utensils or []
    tags = {
        "style": styles,
        "preferences": preferences,
        "difficulte": prompt.tags.difficulte if prompt.tags else "",
        "calories": prompt.tags.calories if prompt.tags else ""
    }

    titles_text = generate_titles_text(client, "mistral-medium", ingredients, utensils, tags)

    return {"result": titles_text}

@router.post("/ingredients")
def generate_ingredients(data: TitleSelected):
    # Tu dois d√©cider comment tu veux r√©cup√©rer les pr√©f√©rences/styles ‚Üí soit tu les ajoutes dans TitleSelected, soit tu les ignores ici
    # Voici une version simple sans pr√©f√©rences
    recipe_title = data.title
    # simulate list of available ingredients (√† remplacer selon ton cas r√©el)
    available_ingredients = ["pommes de terre", "lentilles corail", "oignons", "lait de coco", "ail", "huile d'olive"]
    
    # On utilise un type d‚Äôustensiles g√©n√©rique pour l‚Äôinstant
    ingredient_text = generate_ingredients_text(client, "mistral-medium", recipe_title, available_ingredients)

    return {"result": ingredient_text}

@router.post("/steps")
def generate_steps(prompt: Prompt):
    preferences = prompt.tags.get("preferences", []) if hasattr(prompt, "tags") else []
    styles = prompt.tags.get("style", []) if hasattr(prompt, "tags") else []

    steps_prompt = f"""
Tu es un chef cuisinier sp√©cialis√© dans les recettes {", ".join(preferences) or "traditionnelles"} de style {", ".join(styles) or "fran√ßais"}.

Ta t√¢che est de d√©crire clairement les **√©tapes de pr√©paration** de cette recette :  
"{prompt.message}"

Contraintes :
- Ne propose **aucun ingr√©dient ou ustensile** non mentionn√© dans la recette.
- R√©dige des √©tapes simples, concises, num√©rot√©es, en **fran√ßais**.
- Ne donne **aucune explication suppl√©mentaire**, r√©sum√© ou introduction.

üßæ Exemple de format attendu :

1. √âpluchez les l√©gumes.  
2. Faites-les revenir dans une casserole.  
3. Ajoutez les √©pices et laissez mijoter.
""".strip()

    result = ask_mistral(steps_prompt)
    return {"result": result}

@router.post("/chain")
def generate_full_recipe(prompt: RecipeChainPrompt):
    chosen_title = prompt.title

    preferences = prompt.tags.preferences if prompt.tags and prompt.tags.preferences else []
    styles = prompt.tags.style if prompt.tags and prompt.tags.style else []
    available_ingredients = [f"{ing.quantity} {ing.unit} {ing.name}" for ing in prompt.ingredients]
    ingredient_names = [ing.name for ing in prompt.ingredients]
    utensils = prompt.utensils or []
    utensil_text = ", ".join(utensils)

    # G√©n√©ration des ingr√©dients
    ingredients_prompt = f"""
Titre : {chosen_title}
Pr√©f√©rences : {", ".join(preferences) or "aucune"}
Style : {", ".join(styles) or "non pr√©cis√©"}
Ingr√©dients disponibles :
{chr(10).join(f"- {ing}" for ing in ingredient_names)}
Ustensiles disponibles : {utensil_text or "non pr√©cis√©"}

Donne la liste des ingr√©dients n√©cessaires avec leurs quantit√©s. Utilise uniquement les ingr√©dients disponibles. Format clair, pas de liste JSON, pas d'explication.
""".strip()

    ingredients_text = ask_mistral(ingredients_prompt)

    # G√©n√©ration des √©tapes
    steps_prompt = f"""
Titre : {chosen_title}
Ingr√©dients √† utiliser :
{ingredients_text}

Ustensiles disponibles : {utensil_text or "non pr√©cis√©"}

D√©cris les √©tapes de la recette. Format : liste num√©rot√©e, phrases courtes et pr√©cises. Pas d'introduction, pas de r√©sum√©.
""".strip()

    steps_text = ask_mistral(steps_prompt)

    # Format final
    full_text = f"""
Titre : {chosen_title}

Pr√©f√©rences : {", ".join(preferences) or "aucune"}
Style : {", ".join(styles) or "non pr√©cis√©"}
Ustensiles : {utensil_text or "non pr√©cis√©"}

Ingr√©dients :
{ingredients_text.strip()}

√âtapes :
{steps_text.strip()}
""".strip()

    return {"result": full_text}
